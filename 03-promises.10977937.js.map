{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvCbO,SAASC,iBAAiB,oBAAoB,WAC5C,MAAMC,EAAOF,SAASG,cAAc,SAEpCD,EAAKD,iBAAiB,UAAU,SAAUG,GACxCA,EAAMC,iBAEN,MAAMC,EAAQC,SAASL,EAAKM,SAAgB,MAAEC,OACxCC,EAAOH,SAASL,EAAKM,SAAe,KAAEC,OACtCE,EAASJ,SAASL,EAAKM,SAAiB,OAAEC,OAEhD,GAAIG,MAAMN,IAAUM,MAAMF,IAASE,MAAMD,GACvCtB,EAAAwB,OAAOC,QAAQ,mDAIjB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,IAAK,CAIhCxB,EAHiBwB,EACIT,GAASS,EAAI,GAAKL,GAGpCM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAwB,OAAOI,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEhEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAwB,OAAOC,QAAQ,sBAAoBtB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n    \n    const delay = parseInt(form.elements['delay'].value);\n    const step = parseInt(form.elements['step'].value);\n    const amount = parseInt(form.elements['amount'].value);\n\n    if (isNaN(delay) || isNaN(step) || isNaN(amount)) {\n      Notify.failure('Please fill all fields with valid numbers.');\n      return;\n    }\n\n    for (let i = 1; i <= amount; i++) {\n      const position = i;\n      const promiseDelay = delay + (i - 1) * step;\n\n      createPromise(position, promiseDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  });\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","addEventListener","form","querySelector","event","preventDefault","delay1","parseInt","elements","value","step","amount","isNaN","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.10977937.js.map"}